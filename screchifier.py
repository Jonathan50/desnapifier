#!/usr/bin/env python2

import kurt, sys
import xml.etree.ElementTree
import notsupported, sprites

if len(sys.argv) < 2:
    sys.stderr.write("Usage: %s infile.xml outfile.sb2\n" % sys.argv[0])
    sys.exit()

snap_project = xml.etree.ElementTree.parse(sys.argv[1])
snap_project_root = snap_project.getroot()
snap_project_sprites = None

if "app" in snap_project_root.attrib:
    print "Snap! project generated by \"%s\"\n" % snap_project_root.attrib["app"]

scratch_project = kurt.Project()

for child in snap_project_root:
    if child.tag == "notes":
        # set project notes
        if child.text != None:
            scratch_project.notes = child.text
    if child.tag == "stage":
        # raise error if Stage has inheritance
        if child.attrib['inheritance'] == "true":
            raise notsupported.InheritanceNotSupportedError()
        # iterate over Stage element children
        for stage_child in child.iter():
            if stage_child.tag == "sprites":
                snap_project_sprites = stage_child


if snap_project_sprites == None:
    raise Exception("sprites is none!")

# convert all sprites
for sprite in snap_project_sprites.iter("sprite"):
    sprites.convert_sprite(sprite, scratch_project)

scratch_project.save(sys.argv[2])

print "Done!"
